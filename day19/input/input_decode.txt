#ip 2

00  addi 2 16 2 ; jmp L1

; 19a version: R4 = 987
; 19b version: R4 = 10551387

; Final register state for 19a is:
; [1536, 988, 257, 988, 987, 1]

01  seti 1 0 1  ; L2: R1 = 1

; for (r1 = 1; r1 <= r4; r1++) {
;   for (r3 = 1; r3 <= r4; r3++) {
;     r5 = r1 * r3
;     if r4 == r5 then r0 += r1
;   }
; }

; i.e. code is to sum all the factors.

; 10551387 = 3 x 7 x 11 x 45677

; List of factors: 1, 3, 7, 11, 21, 33, 77, 231, 45677, 137031,
; 319739, 502447, 959217, 1507341, 3517129, 10551387

; Sum is: 17540352

02  seti 1 3 3  ; L4: R3 = 1
03  mulr 1 3 5  ; L3: R5 = R1 * R3
04  eqrr 5 4 5  ;     R5 = R4 == R5  |
05  addr 5 2 2  ;     R2 += R5       | ie if R4 == R5 then R0 += R1
06  addi 2 1 2  ;     R2 += 1        |
07  addr 1 0 0  ;     R0 += R1       |
08  addi 3 1 3  ;     R3 += 1
09  gtrr 3 4 5  ;     R5 = R3 > R4  |
10  addr 2 5 2  ;     R2 += R5      | ie if R3 <= R4 then jmp L3
11  seti 2 6 2  ;     R2 = 2        |

12  addi 1 1 1  ;     R1++
13  gtrr 1 4 5  ;     R5 = R1 > R4   |
14  addr 5 2 2  ;     R2 += R5       | i.e. if R1 <= R4 then jmp L4
15  seti 1 1 2  ;     R2 = 1         |
16  mulr 2 2 2  ;     R2 *= R2   Terminating condition!

17  addi 4 2 4  ; L1: R4 += 2       2
18  mulr 4 4 4  ;     R4 *= R4      4
19  mulr 2 4 4  ;     R4 *= R2 (19) 76
20  muli 4 11 4 ;     R4 *= 11      836
21  addi 5 6 5  ;     R5 += 6       6
22  mulr 5 2 5  ;     R5 *= R2      132
23  addi 5 19 5 ;     R5 += 19      151
24  addr 4 5 4  ;     R4 += R5      987
25  addr 2 0 2  ;     R2 += R0 - Flips case!
26  seti 0 7 2  ;     Orig case: jmp L2
27  setr 2 6 5  ; B:  R5 = R2     27
28  mulr 5 2 5  ;     R5 *= R2    756
29  addr 2 5 5  ;     R5 += R2    785
30  mulr 2 5 5  ;     R5 *= R2    23550
31  muli 5 14 5 ;     R5 *= 14    329700
32  mulr 5 2 5  ;     R5 *= R2    10550400
33  addr 4 5 4  ;     R4 += R5
34  seti 0 7 0  ;     R0 = 0
35  seti 0 3 2  ;     jmp L2
